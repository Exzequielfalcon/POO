import java.util.Scanner;

public class CandyRobots {

	public static void main(String[] args) {

		// TODO Auto-generated method stub
		int n = getN(), x = getX();
		Robot r[] = new Robot[n];
		BuildThem(r, n);
		ShowThem(r, n);
		Sumcost(r, n, x);
	}

	public static void ShowThem(Robot r[], int n) {
		for (int i = 0; i < n; i++) {
			System.out.println("ROBOT " + (i + 1) + "\n"
					+ "============================================");
			System.out.println("The robot produces " + r[i].getP()
					+ " candys per hour");
			System.out.println("After " + r[i].getE()
					+ " hours produce one candy per hour");
			System.out.println("The operation cost per hour is $" + r[i].getC()
					+ "\n");

		}
	}

	public static void BuildThem(Robot r[], int n) {
		int p, e, c;

		for (int i = 0; i < n; i++) {
			p = (int) Math.floor(Math.random() * 1000) + 1;
			e = (int) Math.floor(Math.random() * 16) + 8;
			c = (int) Math.floor(Math.random() * 100) + 1;
			r[i] = new Robot(p, e, c);
		}
	}

	public static void perDay(int p, int e, int c) {
		p = 100;
		e = 12;
		c = 34;
		int day = 24;
		p *= e; // candy by endurance
		e = day - e;
		p += e; // sum after hours

	}

	public static void Sumcost(Robot r[], int n, int x) {
		int total = 0;
		boolean flah = true;
		while (total <= x || flah) {
			for (int i = 0; i < n; i++) {
				if ((total + r[i].getC()) < x) {
					total += r[i].getC();
					System.out.println("entro" + total);
				} else if ((total + r[i].getC()) > x) {
					flah = false;
				}

			}
		}
		System.out.println(total);
	}

	public static int getN() {
		int valori = 0;
		Scanner sc = new Scanner(System.in);
		do {
			try {
				System.out.println("Input the number of robots you want");
				valori = sc.nextInt();

			} catch (Exception exc) {

			}
		} while (valori < 0);
		return valori;
	}

	public static int getX() {
		int valori = 0;
		Scanner sc = new Scanner(System.in);
		do {
			try {
				System.out.println("Input the cost you can afford");
				valori = sc.nextInt();

			} catch (Exception exc) {

			}
		} while (valori < 0);
		return valori;
	}

}

class Robot {
	private int P, E, C;

	public int getP() {
		return P;
	}

	public void setP(int p) {
		P = p;
	}

	public int getE() {
		return E;
	}

	public void setE(int e) {
		E = e;
	}

	public int getC() {
		return C;
	}

	public void setC(int c) {
		C = c;
	}

	public Robot(int p, int e, int c) {
		P = p;
		E = e;
		C = c;
	}

}
